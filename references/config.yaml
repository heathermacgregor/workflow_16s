# Default configuration file

# Important directory and file paths
manual_metadata_dir: "../../../manual_metadata"
project_dir: "../../test"
dataset_list: "./datasets.txt"
dataset_info: "./datasets.tsv"

# Part I: Upstream
upstream: False

ena_email: "macgregor@berkeley.edu"

# Specify if PCR primers used are manually provided or predicted
pcr_primers_mode: "manual"

# Specify the target 16S subfragment
target_subfragment_mode: "any"

blast_db_dir: "./blast/silva_16s/SILVA_16S_db"
validate_16s: False
validate_sequences:
  n_runs: 10
  run_targets:
    - '16S'
    - 'unknown'

run_fastqc: False

run_seqkit: False

run_cutadapt: False
cutadapt:
  start_trim: 0
  end_trim: 0
  start_q_cutoff: 30
  end_q_cutoff: 15
  min_seq_length: 150
  n_cores: 16


  
qiime2:
  per_dataset:
    script_path: "../src/workflow_16s/qiime/workflows/per_dataset_run.py"
    hard_rerun: False
    trim:
      run: True
    denoise:
      chimera_method: "consensus"
      denoise_algorithm: "DADA2"
    taxonomy:
      classifier_dir: "./classifier/silva-138-99-515-806"
      classifier: "silva-138-99-515-806"
      classify_method: "sklearn"
    filter:
      retain_threshold: 80
    
clean_fastq: True

# Part II. Merging datasets and downstream analyses
downstream: True

features:
  filter: True
  normalize: True
  clr_transform: True
  presence_absence: True

stats:
  raw:
    ttest: False          # Avoid: compositionality violates assumptions
    mwu_bonferroni: True   # Non-parametric alternative
    kruskal_bonferroni: True
  presence_absence:
    fisher: True           # Ideal for binary data
    ttest: False           # Avoid: designed for continuous data
    mwu_bonferroni: False  # Avoid: not designed for binary data
    kruskal_bonferroni: False
  filtered:
    ttest: False           # Same issues as raw counts
    mwu_bonferroni: True
    kruskal_bonferroni: True
  normalized:
    ttest: True            # Can be used after proper normalization
    mwu_bonferroni: True   # Still valuable for robustness
    kruskal_bonferroni: True
  clr_transformed:
    ttest: True            # Recommended: CLR addresses compositionality
    mwu_bonferroni: True   # Good alternative for non-normal distributions
    kruskal_bonferroni: True
    
# Example config.yaml additions
cpu:
  limit: 2  # Global CPU limit for all operations

ordination:
  max_workers: 1  # Max concurrent ordination tasks
  cpu_limit: 1    # CPU cores per ordination method
  raw:
    pca: False
    pcoa: True
    pcoa_metric: "braycurtis"
    tsne: False
    umap: False
  presence_absence:
    pca: False
    pcoa: True
    pcoa_metric: "jaccard"
    tsne: True
    umap: True
  filtered:
    pca: False
    pcoa: True
    pcoa_metric: "braycurtis"
    tsne: True
    umap: True
  normalized:
    pca: True
    pcoa: True
    pcoa_metric: "braycurtis"
    tsne: True
    umap: True
  clr_transformed:
    pca: True
    pcoa: True
    pcoa_metric: "euclidean"
    tsne: True
    umap: True

faprotax: True

figures:
  map: True

run_ml: True
ml:
  methods:
    - 'rfe'
    - 'select_k_best'
    - 'chi_squared'
    - 'lasso'
    - 'shap'
    
ml_dep:
  enable: true
  table_type: "clr_transformed"   # raw | normalized | clr_transformed | presence_absence
  level: "genus"                  # phylum | â€¦ | genus
  method: "rfe"                   # rfe | select_k_best | chi_squared | lasso | shap
  num_features: 500
  step_size: 100                  # only used by RFE
  permutation_importance: true
  catboost_threads: 4

